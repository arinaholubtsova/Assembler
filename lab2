; ЗАГОЛОВОК <y=(6ad-b)/(a^2 +d)> ; lab02.asm
YCOUNT equ 5 ; Визначення константи для кількості ітерацій циклу
.data
sbAval SBYTE 2, -118, 10, -40, -122 ; Значення для змінної 'a'
sbBval SBYTE 12, -12, -26, 10, 14 ; Значення для змінної 'b'
sbDval SBYTE 2, 19, -27, 34, 28 ; Значення для змінної 'd'
sbYval SBYTE 5 DUP (77h) ; Масив для зберігання результатів
.code
entry_point proc
xor rax, rax ; Очищення регістрів
xor rbx, rbx
xor rdx, rdx
xor rsi, rsi
xor r8, r8
mov ecx, YCOUNT ; Завантаження кількості ітерацій циклу
mt2:
mov al, 6 ; Завантаження константи '6'
imul [sbAval+rsi] ; Множення '6' на 'a'
cbw ; Очищення верхніх бітів регістру AX
imul [sbDval+rsi] ; Множення результату на 'd'
mov bl, [sbBval+rsi] ; Завантаження 'b'
sub al, bl ; Віднімання 'b' від попереднього результату
mov bl, al ; Збереження проміжного результату в BL
mov al, [sbAval+rsi] ; Завантаження 'a'
imul al ; Піднесення 'a' до квадрата
add al, [sbDval+rsi] ; Додавання 'd' до квадрата 'a'
mov r8b, al ; Збереження результату в R8B
mov al, bl ; Завантаження проміжного результату
cbw ; Очищення верхніх бітів регістру AX
idiv r8b ; Ділення проміжного результату на (a^2 + d)
mov [sbYval+rsi], al ; Збереження кінцевого результату в масив
inc rsi ; Інкремент лічильника циклу
loop mt2 ; Повторення до тих пір, поки лічильник циклу не стане
нулем
ret
entry_point endp
end
